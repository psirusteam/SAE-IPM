[["index.html", "Metodología bayesiana de estimación desagregada para cualquier IPM Capítulo 1 Introducción", " Metodología bayesiana de estimación desagregada para cualquier IPM Andrés Gutiérrez1, Stalyn Guerrero2 2023-09-27 Capítulo 1 Introducción El Índice de Pobreza Multidimensional (IPM) es una medida de la pobreza que toma en cuenta múltiples dimensiones de la vida humana, como la salud, la educación, el acceso a los servicios básicos y las condiciones de vida. Fue desarrollado por Sabina Alkire y James Foster en 2007, y se ha utilizado para medir la pobreza en más de 100 países. El IPM es importante porque ofrece una visión más completa de la pobreza que las medidas tradicionales de la pobreza, que se basan en el ingreso o el consumo. El IPM permite identificar a las personas que son pobres en múltiples dimensiones, y proporciona información sobre las dimensiones de la pobreza que más impactan en la vida de las personas. El IPM tiene algunas limitaciones. Una limitación es que es difícil de calcular, ya que requiere datos sobre múltiples dimensiones de la pobreza. Otra limitación es que el IPM puede ser subjetivo, ya que depende de las dimensiones que se incluyen en el índice y de los pesos que se asignan a cada dimensión. En los últimos años, se han desarrollado metodologías más recientes para el cálculo del IPM. Estas metodologías tienen en cuenta algunas de las limitaciones del IPM tradicional, y ofrecen una visión más precisa de la pobreza multidimensional. Una de las metodologías más recientes es el IPM de Alkire-Foster-Sen (Alkire, Foster y Sen, 2010). Este índice es similar al IPM tradicional, pero tiene en cuenta la desigualdad entre las personas que son pobres. El IPM de Alkire-Foster-Sen también permite identificar a las personas que son pobres en una dimensión, pero no en otras. El IPM es una herramienta importante para medir la pobreza multidimensional. Ofrece una visión más completa de la pobreza que las medidas tradicionales de la pobreza, y proporciona información sobre las dimensiones de la pobreza que más impactan en la vida de las personas. En los últimos años, se han desarrollado metodologías más recientes para el cálculo del IPM, que ofrecen una visión más precisa de la pobreza multidimensional. Experto Regional en Estadísticas Sociales - Comisión Económica para América Latina y el Caribe (CEPAL) - andres.gutierrez@cepal.org↩︎ Consultor - Comisión Económica para América Latina y el Caribe (CEPAL), guerrerostalyn@gmail.com↩︎ "],["índice-de-pobreza-multidimensional.html", "Capítulo 2 Índice de Pobreza Multidimensional", " Capítulo 2 Índice de Pobreza Multidimensional El Índice de Pobreza Multidimensional (IPM) es una medida que captura la pobreza desde múltiples dimensiones. Se calcula utilizando ponderaciones y umbrales en función de diferentes variables o indicadores que reflejan aspectos diversos de la calidad de vida. Ahora el IPM es un caso particular de la metodología de la tasa de pobreza ajustada FGT (Foster, Greer y Thorbecke, 1984) de medidas de pobreza unidimensionales. Al igual que cada medida FGT se puede ver como la media de un vector apropiado construido a partir de los datos originales y censurado usando la línea de pobreza, la tasa de pobreza ajustada es la media del vector de puntuación de privación censurado. \\[ IPM = \\frac{1}{N}\\sum_{i=1}^{N}c_i(z) \\] donde, \\(N\\) es el número de individuos u hogares en la población y \\(c_i(z)\\) es el puntaje de privación censurado de la observación \\(i\\) que esta dado como: \\[ c_{i}\\left(z\\right)=\\begin{cases} q_i &amp; \\text{si } q_i\\ge z\\\\ 0 &amp; \\text{si } q &lt; z \\end{cases} \\] con \\[ q_i = \\sum_{k=1}^{K} w_k \\cdot y_{i}^{k} \\] Donde: \\(K\\) es el número de dimensiones o indicadores de la privación. \\(w_k\\) es el ponderador asociado a la dimensión \\(k\\). \\(y_{i}^{k}\\) es una variable binaria que toma el valor \\(1\\) si el individuo \\(i\\) esta privado en la dimensión \\(k\\) y \\(0\\) en el caso contrario. \\(z\\) es el umbral para considerar a alguien con multiples privaciones. Una segunda forma de ver es en términos de índices parciales, es decir, medidas que proporcionan información básica sobre un solo aspecto de la pobreza. A continuación vemos cada uno de estos componentes: Headcount Ratio (H) Este componente mide la proporción de personas que están privadas en al menos una de las dimensiones consideradas. Matemáticamente, \\(H\\) se calcula como la proporción entre el número de personas privadas y la población total: \\[ H = \\frac{1}{N} \\sum_{i=1}^{N} I\\left( q_{i} \\ge z \\right)= \\frac{N\\left(z\\right)}{N} \\] donde \\(N\\left(z\\right) = \\sum_{i=1}^{N} I\\left( q_{i} \\ge z \\right)\\) Intensity of Deprivation (A) Este componente mide la intensidad o gravedad promedio de la privación entre aquellos que están privados. Matemáticamente, \\(A\\) se calcula como el promedio de los indicadoras \\(y_{i}^{k}\\) para aquellos hogares o personas que están privados: \\[ A=\\sum_{i=1}^{N}\\frac{c_{i}\\left(z\\right)}{N\\left(z\\right)} \\] Luego, el Índice de Pobreza Multidimensional (IPM) se expresa como: \\[ IPM = H \\times A \\] reemplazando las \\(H\\) y \\(A\\) por sus respectivas ecuaciones se tiene que: \\[ IPM=\\frac{N\\left(z\\right)}{N}\\times\\sum_{i=1}^{N}\\frac{c_{i}\\left(z\\right)}{N\\left(z\\right)}=\\frac{1}{N}\\sum_{i=1}^{N}c_{i}\\left(z\\right) \\] "],["ejemplo.html", "2.1 Ejemplo", " 2.1 Ejemplo Para ilustrar el cálculo del Índice de Pobreza Multidimensional (IPM), empleamos el conjunto de datos simulados a continuación. Consideremos un escenario con diez observaciones (\\(N = 10\\)), a las cuales se les han asignado nueve dimensiones distintas (\\(K = 9\\)). Estas dimensiones están ponderadas de acuerdo con el vector \\(w = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2)\\). # Definición de parámetros K &lt;- 9 # Número de dimensiones N &lt;- 10 # Número de personas w &lt;- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2) # Ponderaciones para cada dimensión A continuación se realiza la simulación de la matriz de variables dicótomicas para las diez persona respondientes set.seed(1234) # Generación de datos simulados M_dummy &lt;- matrix(sample(x = c(1,0),size = N * K, replace = TRUE), nrow = N, ncol = K) # Matriz de dimensiones aleatorias colnames(M_dummy)&lt;- paste0(&quot;y&quot;,1:K) rownames(M_dummy)&lt;- paste0(&quot;P&quot;,1:N) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 1 0 0 0 0 1 P2 0 0 0 0 1 0 0 1 0 P3 0 0 0 1 0 0 1 1 1 P4 0 1 0 1 0 0 0 1 0 P5 1 0 0 1 0 1 1 0 1 P6 0 0 0 0 1 0 1 0 0 P7 1 0 1 1 1 1 0 0 1 P8 1 1 0 0 1 1 1 1 0 P9 1 0 0 0 1 0 1 0 0 P10 0 0 0 1 0 1 0 1 1 A continuación se realiza el calculo de H y A usando las ecuaciones dadas previamente. q &lt;- M_dummy %*% w # Vector q de ponderaciones por dimensiones Indicadora &lt;- ifelse(q &gt;= 0.4,1,0) c_i &lt;- ifelse(Indicadora == 1, q,0) datos &lt;- data.frame(M_dummy, q_i = q, Ind_i = Indicadora, c_i) y1 y2 y3 y4 y5 y6 y7 y8 y9 q_i Ind_i c_i P1 0 0 0 1 0 0 0 0 1 0.3 0 0.0 P2 0 0 0 0 1 0 0 1 0 0.2 0 0.0 P3 0 0 0 1 0 0 1 1 1 0.5 1 0.5 P4 0 1 0 1 0 0 0 1 0 0.3 0 0.0 P5 1 0 0 1 0 1 1 0 1 0.6 1 0.6 P6 0 0 0 0 1 0 1 0 0 0.2 0 0.0 P7 1 0 1 1 1 1 0 0 1 0.7 1 0.7 P8 1 1 0 0 1 1 1 1 0 0.6 1 0.6 P9 1 0 0 0 1 0 1 0 0 0.3 0 0.0 P10 0 0 0 1 0 1 0 1 1 0.5 1 0.5 Para obtener el \\(IPM\\) procedemos así IPM = mean(datos$c_i) Los componentes \\(H\\) y \\(A\\) los se obtienen así: Nz = sum(datos$Ind_i) H = Nz/N A = sum(datos$c_i)/Nz data.frame(A,H,HA = H*A, IPM) %&gt;% tba() A H HA IPM 0.58 0.5 0.29 0.29 "],["estimación-del-modelo-de-unidad-para-variables-binarias.html", "Capítulo 3 Estimación del modelo de unidad para variables Binarias", " Capítulo 3 Estimación del modelo de unidad para variables Binarias En muchas aplicaciones, la variable de interés en áreas pequeñas puede ser binaria, por ejemplo, \\(y_{di} = 0\\) ó \\(1\\), representando la ausencia (o no) de una característica específica. En el caso binario, la estimación objetivo en cada dominio \\(d = 1, \\dotso, D\\) puede ser la proporción \\(\\bar{Y}_d = \\pi_d = \\frac{1}{N_d} \\sum_{i=1}^{N_d} y_{di}\\) de la población que tiene esta característica, donde \\(N=\\sum_{d=1}^{D}N_d\\) y \\(\\pi_{di}\\) es la probabilidad de que una unidad específica \\(i\\) en el dominio \\(d\\) obtenga el valor 1. Aunque se han propuesto otros métodos para resultados binarios, como el modelado basado en M-cuantiles (Chambers et al., 2016), en esta aplicación seguimos el enfoque tradicional basado en modelos mixtos lineales generalizados. En este escenario, \\(\\pi_{di}\\) se modela con una función de enlace logit definida como: \\[ \\text{logit}(\\pi_{di}) = \\log \\left( \\frac{\\pi_{di}}{1 - \\pi_{di}} \\right) = \\eta_{di} = \\mathbf{x}_{di}^\\top \\mathbf{\\beta} + u_d \\] con \\(i = 1, \\ldots, N_d\\), \\(d = 1, \\ldots, D\\), \\(\\boldsymbol{\\beta}\\) un vector de parámetros de efectos fijos y \\(u_d\\) el efecto aleatorio específico del área para el dominio \\(d\\) con \\(u_d \\sim N(0, \\sigma_u^2)\\). Se asume que \\(u_d\\) son independientes y \\(y_{di} | u_d \\sim \\text{Bernoulli}(\\pi_{di})\\) con \\(E(y_{di} | u_d) = \\pi_{di}\\) y \\(\\text{Var}(y_{di} | u_d) = \\sigma^2_{di} = \\pi_{di} (1 - \\pi_{di})\\). Además, \\(\\mathbf{x}_{di}\\) representa el vector \\(p \\times 1\\) de valores de las variables auxiliares a nivel de unidad. Dado que nuestro problema involucra la identificación de privaciones en forma de valores binarios \\((0,1)\\) en relación con varios indicadores, hemos optado por utilizar un modelo mixto logit Bernoulli a nivel de unidad como punto de partida. Hay varios algoritmos para ajustar este tipo de modelo, incluyendo el método de momentos simulados (MSM), el algoritmo de expectación-maximización (EM), el algoritmo de verosimilitud cuasi-penalizada (PQL) y el algoritmo de aproximación de máxima verosimilitud Laplace (ML-Laplace). Los métodos bayesianos también se pueden utilizar para ajustar modelos mixtos logit Bernoulli. Uno de los métodos más comunes es el algoritmo de Markov Chain Monte Carlo (MCMC). Este algoritmo genera muestras de los parámetros del modelo a partir de su distribución posterior, que es la distribución de los parámetros dada la evidencia. Otro método bayesiano para ajustar modelos mixtos logit Bernoulli es el enfoque de máxima verosimilitud aproximada (MAP). Este enfoque se basa en la idea de encontrar los parámetros del modelo que maximizan la verosimilitud de los datos, suponiendo que los parámetros siguen una distribución a priori. Los métodos bayesianos tienen varias ventajas sobre los métodos clásicos para ajustar modelos mixtos logit Bernoulli. En primer lugar, los métodos bayesianos pueden incorporar información previa sobre los parámetros del modelo, lo que puede mejorar la precisión de las estimaciones. En segundo lugar, los métodos bayesianos pueden proporcionar intervalos de credivilidad para los parámetros del modelo, que pueden ser utilizados para hacer inferencias sobre el modelo. En tercer lugar, los métodos bayesianos pueden ser utilizados para generar predicciones del modelo, que pueden ser utilizadas para tomar decisiones. Sin embargo, los métodos bayesianos también tienen algunas desventajas. Por ejemplo, los métodos bayesianos pueden ser más sensibles a la elección de la distribución a previas, lo que puede dificultar la obtención de estimaciones precisas. Para evitar, eso en nuestro ejercicio se hará uso de distribuciones previas no informativas, es decir, podemos definir distribuciones previas \\[ \\begin{eqnarray*} \\beta_m &amp; \\sim &amp; N(0, 10000)\\\\ \\sigma^2_u &amp;\\sim &amp; IG(0.0001,0.0001) \\end{eqnarray*} \\] El modelo se debe estimar para cada una de las dimensiones. "],["estimación-de-pik_di.html", "3.1 Estimación de \\(\\pi^{k}_{di}\\)", " 3.1 Estimación de \\(\\pi^{k}_{di}\\) La estimación de \\(\\pi^{k}_{di}\\) refleja la probabilidad de que una unidad específica \\(i\\) en el dominio \\(d\\) obtenga el valor 1 en la dimensión \\(k\\). Para llevar a cabo esta estimación, seguimos el siguiente procedimiento: \\[ \\bar{Y}^{k}_d = \\pi^{k}_d = \\frac{1}{N_d} \\sum_{i=1}^{N_d} y^{k}_{di} \\] Aquí, \\(y^{k}_{di}\\) puede tomar los valores 0 ó 1, representando la ausencia (o no) de una característica específica. Ahora, podemos dividir la suma en dos partes: \\(s_d\\), que representa las unidades observadas en una muestra, y \\(s_d^c\\), que son las unidades no observados. Por lo tanto, \\[ \\begin{equation*} \\bar{Y}^{k}_d = \\pi^{k}_d = \\frac{1}{N_d}\\left(\\sum_{s_d}y^{k}_{di} + \\sum_{s^c_d}y^{k}_{di} \\right) \\end{equation*} \\] Ahora, suponga que mediante un modelo de unidad es posible realizar la predicción de \\(y^{k}_{di}\\) para las unidades no observadas. De esta manera, el estimador de \\(\\pi^{k}_d\\) se expresa como: \\[ \\hat{\\pi}^{k}_d = \\frac{1}{N_d}\\left( \\sum_{s_d}y^{k}_{di} + \\sum_{s^c_d}\\hat{y}^{k}_{di} \\right) \\] Donde, \\[\\hat{y}^{k}_{di}=E_{\\mathscr{M}}\\left(y^{k}_{di}\\mid\\boldsymbol{x}_{d},\\boldsymbol{\\beta}\\right)\\] Aquí, \\(\\mathscr{M}\\) hace referencia a la medida de probabilidad inducida por el modelo. Sin embargo, en la práctica, individualizar a las unidades observadas y no observadas en una encuesta de hogares puede ser difícil. Por lo tanto, una alternativa es realizar la predicción \\(\\hat{y}^{k}_{di}\\) para todas las observaciones en el universo. De esta manera, la estimación \\(\\hat{\\pi}^{k}_d\\) se simplifica a: \\[ \\hat{\\pi}^{k}_d = \\frac{1}{N_d}\\sum_{i=1}^{N_d}\\hat{y}^{k}_{di} \\] Este enfoque permite estimar la probabilidad \\(\\pi^{k}_d\\) en el dominio \\(d\\) en la dimensión \\(k\\) utilizando predicciones y datos disponibles en lugar de contar con información individual detallada para todos los casos. "],["pedicción-de-los-hard-estimates.html", "3.2 Pedicción de los Hard estimates", " 3.2 Pedicción de los Hard estimates Hobza y Morales (2016) definen los “hard estimates” como valores binarios (0 o 1) que indican de manera precisa si un individuo tiene o no una característica específica en relación con cada indicador de pobreza multidimensional. Estas estimaciones reflejan la naturaleza binaria de la información, facilitando el cálculo de indicadores y tasas de incidencia de pobreza. Estas estimaciones desempeñan un papel clave en la determinación de la incidencia de la pobreza multidimensional, ya que indican la presencia o ausencia de privaciones en indicadores específicos para cada individuo. Esto plantea un desafío en la estimación, ya que no se trata solo de obtener valores finales, sino de precisar si las características están presentes o no en indicadores faltantes. Con la definición de los hard estimates, y sabiendo que la estimación de \\(\\pi^{k}_{di}\\) refleja la probabilidad de que una unidad específica \\(i\\) en el dominio \\(d\\) obtenga el valor 1 en la dimensión \\(k\\) se define \\(\\hat{y}^{k}_{di} \\sim Bernoulli(\\hat{\\pi}^{k}_{di})\\) "],["estimación-puntual-del-índice-de-pobreza-multidimensional-ipm.html", "3.3 Estimación Puntual del Índice de Pobreza Multidimensional (IPM)", " 3.3 Estimación Puntual del Índice de Pobreza Multidimensional (IPM) Supongamos que el Índice de Pobreza Multidimensional está compuesto por \\(K\\) dimensiones o indicadores para cada individuo \\(i\\) en el censo. El procedimiento propuesto para estimar el IPM es el siguiente: Utilice los datos de la muestra para ajustar un modelo logit Bernoulli a nivel de unidad para cada indicador. Esto se logra mediante el uso del algoritmo de Markov Chain Monte Carlo (MCMC) con \\(L\\) iteraciones. Para cada dimensión \\(k\\) a la cual se le para ajustó un modelo logit Bernoulli a nivel de unidad con \\(L\\) iteraciones, realice la predicción de los valores \\(\\hat{y}^{k}_{di}\\) para cada individuo en el censo. Esto generará \\(L\\) realizaciones aleatorias de \\(\\hat{y}^{k}_{di}\\). Denotemos como \\(\\hat{y}_{di}^{kl}\\) a la \\(l\\)-ésima realización aleatoria de la dimensión \\(k\\) para el individuo \\(i\\) en el dominio \\(d\\). Calculamos \\(q_{di}^{l} = \\sum_{k=1}^{K} w_k \\cdot y_{di}^{kl}\\). Luego, podemos calcular \\(H_d^{l}\\), \\(A_d^{l}\\) y \\(IPM_{d}^{l}\\) utilizando las ecuaciones: \\[ IPM_{d}^{l} = \\frac{1}{N_d}\\sum_{i=1}^{N_{d}}c_{di}^{l}\\left(z\\right) \\] \\[ H_d^{l}=\\frac{1}{N_{d}}\\sum_{i=1}^{N_{d}}I\\left(q_{di}^{l}\\ge z\\right)=\\frac{N_{d}^{l}\\left(z\\right)}{N_{d}} \\] y \\[ A_{d}^{l}=\\sum_{i=1}^{N_{d}}\\frac{c_{di}^{l}\\left(z\\right)}{N^{l}_{d}\\left(z\\right)} \\] La estimación puntual de \\(H_d\\), \\(A_{d}\\) y \\(IPM_{d}\\) en cada área pequeña \\(d\\) se calcula tomando el promedio sobre cada una de las \\(L\\) iteraciones: \\[ \\hat{H}_d = \\frac{1}{L}\\sum_{l=1}^{L}H_d^l, \\] \\[ \\hat{A}_d = \\frac{1}{L}\\sum_{l=1}^{L}A_d^l \\] y \\[ \\widehat{IPM}_d = \\frac{1}{L}\\sum_{l=1}^{L}IPM_d^l \\] Dada que el modelo se estimó usando el algoritmo MCMC, es posible tener la estimación del error de estimación, de esta forma: \\[ \\widehat{Var}(\\hat{H}_d) = \\frac{1}{L}\\sum_{l=1}^{L}\\left( H^{l}_{d} -\\hat{H}_d \\right)^2, \\] \\[ \\widehat{Var}(\\hat{A}_d) = \\frac{1}{L}\\sum_{l=1}^{L}\\left( A^{l}_{d} -\\hat{A}_d \\right)^2 \\] y \\[ \\widehat{Var}(\\widehat{IPM}_d) = \\frac{1}{L}\\sum_{l=1}^{L}\\left( IPM_d^{l} -\\widehat{IPM}_d \\right)^2 \\] "],["ejemplo-aplicación-de-la-metodología..html", "3.4 Ejemplo: Aplicación de la metodología.", " 3.4 Ejemplo: Aplicación de la metodología. Para ilustrar el cálculo del Índice de Pobreza Multidimensional (IPM), empleando el algoritmo MCMC empleamos el conjunto de datos simulados a continuación. Consideremos un escenario con diez unidades (\\(N = 10\\)), a las cuales se les han asignado nueve dimensiones distintas (\\(K = 9\\)). Estas dimensiones están ponderadas de acuerdo con el vector \\(w = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2)\\). # Definición de parámetros K &lt;- 9 # Número de dimensiones N &lt;- 10 # Número de personas w &lt;- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2) # Ponderaciones para cada dimensión A continuación se realiza la simulación de la matriz de variables dicótomicas para las diez unidades, para ello asumiremos que \\(\\hat{\\pi}^{k}_{di} = (0.5, 0.2, 0.3, 0.4, 0.1, 0.9, 0.2, 0.7, 0.1)\\) que fueron estimados mediante modelos mixtos logit Bernoulli, Bayesiano con \\(L = 5\\). Con las que se obtienes las siguientes matrices de Hard estimates set.seed(1234) library(purrr) pi_di = c(0.5, 0.2, 0.3, 0.4, 0.1, 0.9, 0.2, 0.7,0.1) # Generación de datos simulados ## Iteración 1 data_1 &lt;- data.frame( y1 = as.numeric(rbernoulli(n = N, p= pi_di[1])), y2 = as.numeric(rbernoulli(n = N, p= pi_di[2])), y3 = as.numeric(rbernoulli(n = N, p= pi_di[3])), y4 = as.numeric(rbernoulli(n = N, p= pi_di[4])), y5 = as.numeric(rbernoulli(n = N, p= pi_di[5])), y6 = as.numeric(rbernoulli(n = N, p= pi_di[6])), y7 = as.numeric(rbernoulli(n = N, p= pi_di[7])), y8 = as.numeric(rbernoulli(n = N, p= pi_di[8])), y9 = as.numeric(rbernoulli(n = N, p= pi_di[9])) ) rownames(data_1)&lt;- paste0(&quot;P&quot;,1:N) Tabla 3.1: Iteración (l=1) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 0 0 0 1 0 1 P2 1 0 0 0 0 1 0 1 0 P3 1 0 0 0 0 1 0 0 0 P4 1 1 0 0 0 1 0 1 0 P5 1 0 0 0 0 1 0 0 0 P6 1 1 1 1 0 1 0 1 0 P7 0 0 0 0 0 1 0 1 0 P8 0 0 1 0 0 1 0 0 0 P9 1 0 1 1 0 1 0 1 0 P10 1 0 0 1 0 1 0 1 0 Tabla 3.2: Iteración (l=2) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 1 1 1 1 0 1 0 P2 1 0 0 1 0 1 0 1 0 P3 0 0 1 1 0 1 0 1 0 P4 0 0 0 1 0 1 1 0 0 P5 0 0 0 0 1 1 0 0 0 P6 1 0 1 0 0 1 1 1 0 P7 0 0 1 0 1 1 0 1 0 P8 0 0 0 0 0 1 1 0 0 P9 0 0 0 0 0 1 0 1 0 P10 1 0 1 0 0 1 0 1 0 Tabla 3.3: Iteración (l=3) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 0 0 1 0 1 0 P2 0 1 0 0 0 1 0 1 0 P3 1 0 0 0 0 1 0 0 0 P4 0 1 1 1 0 1 0 0 0 P5 1 1 0 0 0 1 1 0 0 P6 0 1 1 1 0 1 0 1 0 P7 1 1 0 1 0 1 0 0 0 P8 1 0 0 1 0 1 0 0 0 P9 0 1 0 0 0 1 1 1 0 P10 1 0 1 1 0 1 0 1 0 Tabla 3.4: Iteración (l=4) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 0 0 0 1 1 0 1 0 P2 1 0 0 1 0 1 1 0 0 P3 0 1 1 0 0 1 1 1 0 P4 1 0 0 0 0 1 0 1 0 P5 0 0 0 1 0 1 0 1 1 P6 1 0 1 0 0 1 0 1 1 P7 1 0 0 0 0 1 0 0 0 P8 1 0 0 1 0 1 0 1 0 P9 0 0 0 0 0 1 1 1 0 P10 0 1 0 1 0 1 0 0 0 Tabla 3.5: Iteración (l=5) y1 y2 y3 y4 y5 y6 y7 y8 y9 P1 0 1 0 1 0 1 0 1 0 P2 1 0 0 1 0 1 1 1 0 P3 0 1 0 1 0 1 0 1 0 P4 0 0 0 1 0 1 0 1 0 P5 1 0 0 0 0 1 1 0 1 P6 1 0 0 1 0 1 0 1 0 P7 1 0 0 0 0 1 0 1 0 P8 0 0 0 0 0 1 0 1 0 P9 1 0 1 0 0 1 0 1 0 P10 1 0 1 0 0 1 0 1 0 A continuación se realiza el calculo de \\(q^l_i\\), \\(I\\left( q_{i}^{l} &gt; z \\right)\\) y \\(c_{i}^{l}\\left(z\\right)\\) usando las ecuaciones dadas previamente y \\(z=0.4\\). # Vector q de ponderaciones por dimensiones q1 &lt;- as.matrix(data_1) %*% w q2 &lt;- as.matrix(data_2) %*% w q3 &lt;- as.matrix(data_3) %*% w q4 &lt;- as.matrix(data_4) %*% w q5 &lt;- as.matrix(data_5) %*% w Ind1 &lt;- ifelse(q1 &gt;= 0.4,1,0) Ind2 &lt;- ifelse(q2 &gt;= 0.4,1,0) Ind3 &lt;- ifelse(q3 &gt;= 0.4,1,0) Ind4 &lt;- ifelse(q4 &gt;= 0.4,1,0) Ind5 &lt;- ifelse(q5 &gt;= 0.4,1,0) c1 &lt;- ifelse(Ind1 == 1,q1,0) c2 &lt;- ifelse(Ind2 == 1,q2,0) c3 &lt;- ifelse(Ind3 == 1,q3,0) c4 &lt;- ifelse(Ind4 == 1,q4,0) c5 &lt;- ifelse(Ind5 == 1,q5,0) datos &lt;- data.frame(q1, q2, q3, q4, q5, Ind1, Ind2, Ind3, Ind4, Ind5, c1, c2, c3, c4, c5) q1 q2 q3 q4 q5 Ind1 Ind2 Ind3 Ind4 Ind5 c1 c2 c3 c4 c5 P1 0.3 0.5 0.2 0.3 0.4 0 1 0 0 1 0.0 0.5 0.0 0.0 0.4 P2 0.3 0.4 0.3 0.4 0.5 0 1 0 1 1 0.0 0.4 0.0 0.4 0.5 P3 0.2 0.4 0.2 0.5 0.4 0 1 0 1 1 0.0 0.4 0.0 0.5 0.4 P4 0.4 0.3 0.4 0.3 0.3 1 0 1 0 0 0.4 0.0 0.4 0.0 0.0 P5 0.2 0.2 0.4 0.5 0.5 0 0 1 1 1 0.0 0.0 0.4 0.5 0.5 P6 0.6 0.5 0.5 0.6 0.4 1 1 1 1 1 0.6 0.5 0.5 0.6 0.4 P7 0.2 0.4 0.4 0.2 0.3 0 1 1 0 0 0.0 0.4 0.4 0.0 0.0 P8 0.2 0.2 0.3 0.4 0.2 0 0 0 1 0 0.0 0.0 0.0 0.4 0.0 P9 0.5 0.2 0.4 0.3 0.4 1 0 1 0 1 0.5 0.0 0.4 0.0 0.4 P10 0.4 0.4 0.5 0.3 0.4 1 1 1 0 1 0.4 0.4 0.5 0.0 0.4 Ahora se calcula \\(IPM^l\\) , \\(H^l\\) y \\(A^l\\), esto es: IPM_l &lt;- colMeans(datos[,11:15]) Nz_l &lt;- colSums(datos[,6:10]) H_l &lt;- Nz_l/N A_l &lt;- colSums(datos[,11:15])/Nz_l tab_l &lt;- data.frame(IPM_l, Nz_l, H_l, A_l, HA_l = H_l*A_l) rownames(tab_l) &lt;- paste0(&quot;l = &quot;, 1:nrow(tab_l)) tba(tab_l) IPM_l Nz_l H_l A_l HA_l l = 1 0.19 4 0.4 0.4750 0.19 l = 2 0.26 6 0.6 0.4333 0.26 l = 3 0.26 6 0.6 0.4333 0.26 l = 4 0.24 5 0.5 0.4800 0.24 l = 5 0.30 7 0.7 0.4286 0.30 Por último se realiza el calculo de las estimaciones puntuales y su varianza para \\(H\\), \\(A\\) y \\(IPM\\), esto es: estimacion &lt;- data.frame(H = mean(H_l), H_sd = sd(H_l), A = mean(A_l), A_sd = sd(A_l), IPM = mean(IPM_l), IPM_sd = sd(IPM_l)) Tabla 3.6: Estimaciones H H_sd A A_sd IPM IPM_sd 0.56 0.114 0.45 0.0252 0.25 0.04 "],["aplicación-índice-de-pobreza-multidimensional-en-colombia..html", "Capítulo 4 Aplicación: Índice de Pobreza Multidimensional en Colombia.", " Capítulo 4 Aplicación: Índice de Pobreza Multidimensional en Colombia. Nos centramos en la incidencia de la pobreza multidimensional descrito previamente. En este caso, requerimos \\(K = 8\\) indicadores que se miden como privaciones: \\(y_{di}^{k} = 1\\) si la persona tiene la privación y \\(y_{di}^{k} = 0\\) si la persona no ha tenido la privación. El índice requiere información para cada individuo \\(i = 1, \\ldots, N_d\\) en los dominios \\(d = 1, \\ldots, D\\), donde \\(N_d\\) denota el tamaño de la población del dominio \\(d\\). La función indicadora \\(I(\\cdot)\\) es igual a 1 cuando se cumple la condición \\(q_{di} &gt; z\\). Para este estudio, utilizamos el valor de 0.4 para \\(z\\), es decir, \\(I(\\cdot)\\) es igual a 1 cuando \\(q_{di} \\ge 0.4\\). \\(q_{di}\\) es una cantidad ponderada que considera los \\(K = 8\\) indicadores que conforman el índice. El valor de \\(q_{di}\\) el dominio \\(d\\) se calcula como: \\[ q_{di} = 0.1\\sum_{k=1}^{6}y_{di}^{k} + 0.2(y_{di}^{7} + y_{di}^{8}) \\] Donde: a. \\(y_{di}^{1}\\) = Privación en material de construcción de la vivienda \\(y_{di}^{2}\\) = Hacinamiento en el hogar. \\(y_{di}^{3}\\) = Privación de acceso al agua potable. \\(y_{di}^{4}\\) = Privación en saneamiento. \\(y_{di}^{5}\\) = Acceso al servicio energía eléctrica. \\(y_{di}^{6}\\) = Acceso al servicio de internet. \\(y_{di}^{7}\\) = Privación de la educación. \\(y_{di}^{8}\\) = Privación del empleo y la protección social. Note que, la primera parte de la suma considera los indicadores de las dimensiones de vivienda, agua y saneamiento, energía y conectividad. La segunda parte, los indicadores de las dimensiones de educación y empleo y protección social. Los datos de la encuesta y el censo han sido preparados previamente, la información sobre la cual realizaremos la predicción corresponde a Colombia en el 2019 encuesta_ipm &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/encuesta_COL.rds&quot;) statelevel_predictors_df &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/statelevel_predictors_df_dam2.rds&quot;) %&gt;% rename(depto = dam, mpio = dam2) byAgrega &lt;- c(&quot;depto&quot;, &quot;mpio&quot;, &quot;area&quot;, &quot;sexo&quot;, &quot;etnia&quot;, &quot;anoest&quot;, &quot;edad&quot;, &quot;condact3&quot;) Agregando la información para los municipios de Colombia para los indicadores que conformarán el IPM names_ipm &lt;- grep(pattern = &quot;ipm&quot;, names(encuesta_ipm),value = TRUE) encuesta_df &lt;- map(setNames(names_ipm,names_ipm), function(y){ encuesta_ipm$temp &lt;- encuesta_ipm[[y]] encuesta_ipm %&gt;% group_by_at(all_of(byAgrega)) %&gt;% summarise(n = n(), yno = sum(temp), ysi = n - yno, .groups = &quot;drop&quot;) %&gt;% inner_join(statelevel_predictors_df, by = c(&quot;depto&quot;,&quot;mpio&quot;)) }) La base resultante quedan de la siguiente forma: Tabla 4.1: Privaci’on en material de construcci’on de la vivienda depto mpio area sexo etnia anoest edad condact3 n yno ysi area1 sexo2 edad2 edad3 edad4 edad5 etnia2 anoest2 anoest3 anoest4 etnia1 tiene_acueducto piso_tierra alfabeta hacinamiento tasa_desocupacion luces_nocturnas cubrimiento_cultivo cubrimiento_urbano modificacion_humana accesibilidad_hospitales accesibilidad_hosp_caminado 11 11001 1 1 3 3 2 1 1434 5 1429 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 47 47001 1 1 3 3 3 1 1432 17 1415 0.9150 0.5158 0.2705 0.2125 0.1913 0.0719 0.0354 0.2539 0.4149 0.1837 0.0169 0.3002 0.0312 0.0364 0.2845 0.0015 4.3364 0.4577 1.7512 0.3278 210.3355 611.8750 11 11001 1 2 3 4 3 1 1387 2 1385 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 11 11001 1 1 3 3 3 1 1326 7 1319 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 08 08001 1 1 3 3 3 1 1280 7 1273 0.9993 0.5208 0.2558 0.2131 0.2146 0.0968 0.0521 0.2324 0.3976 0.2411 0.0012 0.0188 0.0139 0.0232 0.2084 0.0029 58.0251 3.8798 50.9581 0.8114 3.2552 21.7908 23 23001 1 1 3 3 3 1 1236 83 1153 0.8192 0.5149 0.2631 0.2146 0.1961 0.0761 0.0170 0.2857 0.3634 0.1920 0.0072 0.1251 0.1412 0.0657 0.2275 0.0010 3.8284 19.0431 1.0209 0.4172 48.4391 234.8668 Tabla 4.2: Hacinamiento depto mpio area sexo etnia anoest edad condact3 n yno ysi area1 sexo2 edad2 edad3 edad4 edad5 etnia2 anoest2 anoest3 anoest4 etnia1 tiene_acueducto piso_tierra alfabeta hacinamiento tasa_desocupacion luces_nocturnas cubrimiento_cultivo cubrimiento_urbano modificacion_humana accesibilidad_hospitales accesibilidad_hosp_caminado 11 11001 1 1 3 3 2 1 1434 342 1092 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 47 47001 1 1 3 3 3 1 1432 657 775 0.9150 0.5158 0.2705 0.2125 0.1913 0.0719 0.0354 0.2539 0.4149 0.1837 0.0169 0.3002 0.0312 0.0364 0.2845 0.0015 4.3364 0.4577 1.7512 0.3278 210.3355 611.8750 11 11001 1 2 3 4 3 1 1387 118 1269 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 11 11001 1 1 3 3 3 1 1326 251 1075 0.9979 0.5219 0.2690 0.2316 0.2251 0.0886 0.0093 0.2098 0.3810 0.2938 0.0027 0.0219 0.0026 0.0143 0.0848 0.0176 22.0069 9.1869 19.7751 0.5697 61.3823 259.2423 08 08001 1 1 3 3 3 1 1280 583 697 0.9993 0.5208 0.2558 0.2131 0.2146 0.0968 0.0521 0.2324 0.3976 0.2411 0.0012 0.0188 0.0139 0.0232 0.2084 0.0029 58.0251 3.8798 50.9581 0.8114 3.2552 21.7908 23 23001 1 1 3 3 3 1 1236 503 733 0.8192 0.5149 0.2631 0.2146 0.1961 0.0761 0.0170 0.2857 0.3634 0.1920 0.0072 0.1251 0.1412 0.0657 0.2275 0.0010 3.8284 19.0431 1.0209 0.4172 48.4391 234.8668 "],["definiendo-de-los-modelos-en-stan..html", "4.1 Definiendo de los modelos en Stan.", " 4.1 Definiendo de los modelos en Stan. Para cada dimensión que compone el IPM se ajusta un modelo mixtos logit Bernoulli estimando mediante técnicas bayesiana. En este código se incluye el uso de la función future_map que permite procesar en paralelo cada modelo O puede compilar cada por separado, en nuestro caso se proceso cada modelo por separado. library(furrr) plan(multisession, workers = 4) fit &lt;- future_map(encuesta_df, function(xdat){ stan_glmer( cbind(yno, ysi) ~ (1 | mpio) + (1 | depto) + edad + area + anoest + etnia + sexo + tasa_desocupacion , family = binomial(link = &quot;logit&quot;), data = xdat, cores = 7, chains = 4, iter = 300 )}, .progress = TRUE) saveRDS(object = fit, &quot;Data/fits_IPM.rds&quot;) Terminado la compilación de los modelos después de realizar validaciones sobre esto, pasamos hacer las predicciones en el censo. "],["proceso-para-la-predicción-pi_dikl.html", "4.2 Proceso para la predicción \\(\\pi_{di}^{kl}\\)", " 4.2 Proceso para la predicción \\(\\pi_{di}^{kl}\\) Los modelos fueron compilados de manera separada, por tanto, disponemos de un objeto .rds por cada dimensión del IPM fit_agua &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_agua.rds&quot;) fit_educacion &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_educacion.rds&quot;) fit_empleo &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_empleo.rds&quot;) fit_energia &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_Energia.rds&quot;) fit_hacinamiento &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_Hacinamiento.rds&quot;) fit_internet &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_internet.rds&quot;) fit_material &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_material.rds&quot;) fit_saneamiento &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/fit_bayes_saneamiento.rds&quot;) Ahora, debemos leer la información del censo y crear los post-estrato censo_ipm &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/censo_COL.rds&quot;) %&gt;% rename(dam = depto, dam2 = mpio) %&gt;% group_by(dam, dam2, area, sexo, edad, etnia, anoest) %&gt;% summarise(n = sum(n), .groups = &quot;drop&quot;) statelevel_predictors_df &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/Data/statelevel_predictors_df_dam2.rds&quot;) Para realizar la predicción en el censo debemos incluir la información auxiliar poststrat_df &lt;- left_join(censo_ipm, statelevel_predictors_df, by = c(&quot;dam&quot;, &quot;dam2&quot;)) %&gt;% rename(depto = dam, mpio = dam2) Para cada uno de los modelos anteriores debe tener las \\(L\\) predicciones de \\(\\pi_{di}^{kl}\\), Privación de acceso al agua potable. temp &lt;- poststrat_df epred_mat_agua &lt;- posterior_epred( fit_agua, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación de la educación. epred_mat_educacion &lt;- posterior_epred( fit_educacion, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación del empleo y la protección social. epred_mat_empleo &lt;- posterior_epred( fit_empleo, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Acceso al servicio energía eléctrica. epred_mat_energia &lt;- posterior_epred( fit_energia, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Hacinamiento en el hogar. epred_mat_hacinamiento &lt;- posterior_epred( fit_hacinamiento, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Acceso al servicio de Internet. epred_mat_internet &lt;- posterior_epred( fit_internet, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación en material de construcción de la vivienda epred_mat_material &lt;- posterior_epred( fit_material, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) Privación en saneamiento. epred_mat_saneamiento &lt;- posterior_epred( fit_saneamiento, newdata = temp, type = &quot;response&quot;, allow.new.levels = TRUE ) "],["definiendo-los-hard-estimates.html", "4.3 Definiendo los hard estimates", " 4.3 Definiendo los hard estimates Los resultados anteriores se deben procesarse para obtener los hard estimates, es decir, términos de carencia (1) y no carencia (0) para la \\(k-esima\\) dimensión . Privación de acceso al agua potable. epred_mat_agua_dummy &lt;- rbinom(n = nrow(epred_mat_agua) * ncol(epred_mat_agua) , 1, epred_mat_agua) epred_mat_agua_dummy &lt;- matrix( epred_mat_agua_dummy, nrow = nrow(epred_mat_agua), ncol = ncol(epred_mat_agua) ) Privación de la educación. epred_mat_educacion_dummy &lt;- rbinom(n = nrow(epred_mat_educacion) * ncol(epred_mat_educacion) , 1, epred_mat_educacion) epred_mat_educacion_dummy &lt;- matrix( epred_mat_educacion_dummy, nrow = nrow(epred_mat_educacion), ncol = ncol(epred_mat_educacion) ) Acceso al servicio energía eléctrica epred_mat_energia_dummy &lt;- rbinom(n = nrow(epred_mat_energia) * ncol(epred_mat_energia) , 1, epred_mat_energia) epred_mat_energia_dummy &lt;- matrix( epred_mat_energia_dummy, nrow = nrow(epred_mat_energia), ncol = ncol(epred_mat_energia) ) Hacinamiento en el hogar. epred_mat_hacinamiento_dummy &lt;- rbinom( n = nrow(epred_mat_hacinamiento) * ncol(epred_mat_hacinamiento) , 1, epred_mat_hacinamiento ) epred_mat_hacinamiento_dummy &lt;- matrix( epred_mat_hacinamiento_dummy, nrow = nrow(epred_mat_hacinamiento), ncol = ncol(epred_mat_hacinamiento) ) Acceso al servicio de Internet. epred_mat_internet_dummy &lt;- rbinom(n = nrow(epred_mat_internet) * ncol(epred_mat_internet) , 1, epred_mat_internet) epred_mat_internet_dummy &lt;- matrix( epred_mat_internet_dummy, nrow = nrow(epred_mat_internet), ncol = ncol(epred_mat_internet) ) Privación en material de construcción de la vivienda epred_mat_material_dummy &lt;- rbinom(n = nrow(epred_mat_material) * ncol(epred_mat_material) , 1, epred_mat_material) epred_mat_material_dummy &lt;- matrix( epred_mat_material_dummy, nrow = nrow(epred_mat_material), ncol = ncol(epred_mat_material) ) Privación en saneamiento. epred_mat_saneamiento_dummy &lt;- rbinom(n = nrow(epred_mat_saneamiento) * ncol(epred_mat_saneamiento) , 1, epred_mat_saneamiento) epred_mat_saneamiento_dummy &lt;- matrix( epred_mat_saneamiento_dummy, nrow = nrow(epred_mat_saneamiento), ncol = ncol(epred_mat_saneamiento) ) Privación del empleo y la protección social. epred_mat_empleo_dummy &lt;- rbinom(n = nrow(epred_mat_empleo) * ncol(epred_mat_empleo) , 1, epred_mat_empleo) epred_mat_empleo_dummy &lt;- matrix( epred_mat_empleo_dummy, nrow = nrow(epred_mat_empleo), ncol = ncol(epred_mat_empleo) ) "],["calculando-q_dil-ileft-q_dil-z-right-y-c_dilleftzright.html", "4.4 Calculando \\(q_{di}^{l}\\), \\(I\\left( q_{di}^{l} &gt; z \\right)\\) y \\(c_{di}^{l}\\left(z\\right)\\)", " 4.4 Calculando \\(q_{di}^{l}\\), \\(I\\left( q_{di}^{l} &gt; z \\right)\\) y \\(c_{di}^{l}\\left(z\\right)\\) Dado que los hard estimates fueron organizados en matrices, el calculo de \\(q^{l}_{id}\\) es una simple operación matricial la cual se muestra a continuación chain_q &lt;- 0.1 * ( epred_mat_material_dummy + epred_mat_hacinamiento_dummy + epred_mat_agua_dummy + epred_mat_saneamiento_dummy + epred_mat_energia_dummy + epred_mat_internet_dummy ) + 0.2 * (epred_mat_educacion_dummy + epred_mat_empleo_dummy) Ahora, es posible tener el calculo de \\(I\\left( q_{di}^{l} &gt; z \\right)\\), tomando como umbral \\(z=0.4\\). chain_Ind &lt;- chain_q chain_Ind[chain_Ind &lt;= 0.4] &lt;- 0 chain_Ind[chain_Ind != 0] &lt;- 1 seguidamente calculamos \\(c_{di}^{l}\\left(z\\right)\\) chain_ci &lt;- matrix(0,nrow = nrow(chain_q), ncol = ncol(chain_q)) chain_ci[chain_Ind == 1] &lt;- chain_q[chain_Ind == 1] datos&lt;-data.frame(t(chain_q[1:5,1:10]), t(chain_Ind[1:5,1:10]), t(chain_ci[1:5,1:10]), N = censo_ipm$n[1:10] ) colnames(datos) &lt;- c(paste0(&quot;q&quot;,1:5), paste0(&quot;Ind&quot;,1:5),paste0(&quot;c&quot;,1:5),&quot;N&quot;) tba(datos, &quot;Cadenas obtenidas&quot;) Tabla 4.3: Cadenas obtenidas q1 q2 q3 q4 q5 Ind1 Ind2 Ind3 Ind4 Ind5 c1 c2 c3 c4 c5 N 0.7 0.4 0.6 0.6 0.4 1 0 1 1 0 0.7 0.0 0.6 0.6 0.0 1 0.6 0.6 0.6 0.6 0.5 1 1 1 1 1 0.6 0.6 0.6 0.6 0.5 1 0.3 0.4 0.4 0.6 0.3 0 0 0 1 0 0.0 0.0 0.0 0.6 0.0 9 0.4 0.4 0.4 0.7 0.3 0 0 0 1 0 0.0 0.0 0.0 0.7 0.0 1 0.4 0.7 0.6 0.8 0.6 0 1 1 1 1 0.0 0.7 0.6 0.8 0.6 5 0.4 0.4 0.5 0.1 0.6 0 0 1 0 1 0.0 0.0 0.5 0.0 0.6 22 0.5 0.4 0.3 0.5 0.3 1 0 0 1 0 0.5 0.0 0.0 0.5 0.0 9 0.5 0.4 0.4 0.4 0.7 1 0 0 0 1 0.5 0.0 0.0 0.0 0.7 76 0.5 0.3 0.6 0.7 0.6 1 0 1 1 1 0.5 0.0 0.6 0.7 0.6 796 0.4 0.7 0.7 0.4 0.6 0 1 1 0 1 0.0 0.7 0.7 0.0 0.6 3549 "],["estimación-de-h-a-e-ipm.html", "4.5 Estimación de \\(H\\), \\(A\\) e \\(IPM\\)", " 4.5 Estimación de \\(H\\), \\(A\\) e \\(IPM\\) Para este proceso debemos realizar sumas ponderadas, dado que cada registro de la base de datos representa un grupo de observaciones con las mismas características. numIPM &lt;- t(chain_ci) %&gt;% as.data.frame() %&gt;% mutate_all(~ . * censo_ipm$n) %&gt;% as.matrix() chain_N &lt;- t(chain_Ind) %&gt;% as.data.frame() %&gt;% mutate_all(~ . * censo_ipm$n) %&gt;% as.matrix() IPM_l &lt;- colSums(numIPM)/sum(censo_ipm$n) Nz_l &lt;- colSums(chain_N) H_l &lt;- Nz_l/sum(censo_ipm$n) A_l &lt;- colSums(numIPM)/Nz_l Tabla 4.4: l-iteraciones IPM_l Nz_l H_l A_l HA_l l = 1 0.1902 10996210 0.3217 0.5911 0.1902 l = 2 0.2154 12202627 0.3570 0.6032 0.2154 l = 3 0.2019 11414502 0.3339 0.6045 0.2019 l = 4 0.2003 11515260 0.3369 0.5947 0.2003 l = 5 0.2024 11679743 0.3417 0.5924 0.2024 l = 6 0.1914 10856902 0.3176 0.6025 0.1914 l = 7 0.1970 11325242 0.3313 0.5944 0.1970 l = 8 0.1967 11309073 0.3309 0.5945 0.1967 l = 9 0.1966 11325920 0.3314 0.5935 0.1966 l = 10 0.2223 12466527 0.3647 0.6094 0.2223 Por último se realiza las estimaciones puntuales y varianza para \\(H\\), \\(A\\) y \\(IPM\\), esto es: estimacion &lt;- data.frame(H = mean(H_l), H_sd = sd(H_l), A = mean(A_l), A_sd = sd(A_l), IPM = mean(IPM_l), IPM_sd = sd(IPM_l)) Tabla 4.5: Estimaciones Nacionales H H_sd A A_sd IPM IPM_sd 0.3304 0.0164 0.5939 0.0068 0.1963 0.0104 "],["estimaciones-desagregadas-del-ipm.html", "4.6 Estimaciones desagregadas del IPM", " 4.6 Estimaciones desagregadas del IPM Para realizar las estimaciones desagregadas se desarrollo una función que facilita el calculo, la estructura general el proceso es repetir el proceso anterior por subgrupos, por ejemplo, departamento (dam) source(&quot;Modelo_bayes_HxA/0funciones/Estimar_ipm.R&quot;) ipm_dam &lt;- estime_IPM(poststrat = censo_ipm, chain_ci = chain_ci, chain_ind = chain_ind, byMap = &quot;dam&quot; ) %&gt;% data.frame() Tabla 4.6: Estimaciones por departamento dam H H_sd A A_sd IPM IPM_sd 05 0.2651 0.0373 0.5731 0.0117 0.1518 0.0206 08 0.2438 0.0423 0.5496 0.0115 0.1339 0.0228 11 0.0978 0.0590 0.5204 0.0234 0.0507 0.0305 13 0.4637 0.0363 0.6131 0.0119 0.2843 0.0227 15 0.4041 0.0250 0.5854 0.0089 0.2367 0.0166 17 0.2765 0.0273 0.5734 0.0079 0.1585 0.0150 18 0.5534 0.0447 0.6105 0.0088 0.3377 0.0256 19 0.5790 0.0233 0.6201 0.0066 0.3591 0.0156 20 0.4640 0.0439 0.5974 0.0111 0.2772 0.0268 23 0.5960 0.0267 0.6461 0.0090 0.3850 0.0166 25 0.3134 0.0360 0.5762 0.0105 0.1807 0.0217 27 0.7703 0.0340 0.6313 0.0081 0.4863 0.0226 41 0.4421 0.0320 0.5846 0.0128 0.2585 0.0201 44 0.7391 0.0254 0.6965 0.0081 0.5147 0.0172 47 0.5081 0.0458 0.6099 0.0132 0.3098 0.0275 50 0.3607 0.0437 0.5920 0.0128 0.2133 0.0238 52 0.6008 0.0316 0.6170 0.0075 0.3707 0.0199 54 0.4295 0.0456 0.5866 0.0102 0.2518 0.0257 63 0.2303 0.0414 0.5473 0.0101 0.1259 0.0218 66 0.2677 0.0368 0.5652 0.0104 0.1510 0.0193 68 0.3225 0.0246 0.5898 0.0102 0.1902 0.0146 70 0.5707 0.0344 0.6260 0.0115 0.3573 0.0232 73 0.3954 0.0310 0.5891 0.0123 0.2329 0.0192 76 0.2052 0.0232 0.5552 0.0100 0.1139 0.0125 81 0.5829 0.0998 0.5991 0.0271 0.3509 0.0706 85 0.5409 0.1040 0.5924 0.0270 0.3220 0.0707 86 0.6122 0.0940 0.6059 0.0277 0.3728 0.0702 88 0.4691 0.1161 0.5793 0.0252 0.2732 0.0735 91 0.6110 0.1082 0.6159 0.0289 0.3782 0.0786 94 0.6954 0.0919 0.6304 0.0331 0.4402 0.0739 95 0.5962 0.1044 0.6044 0.0276 0.3617 0.0724 97 0.7010 0.0996 0.6355 0.0352 0.4475 0.0797 99 0.7090 0.0831 0.6355 0.0350 0.4524 0.0708 Otra estimación desagregada que es posible obtener es la combinación por departamento y sexo, para ellos se usa la sintaxis. ipm_dam_sexo &lt;- estime_IPM( poststrat = censo_ipm, chain_ci = chain_ci, chain_ind = chain_ind, byMap = c(&quot;dam&quot;, &quot;sexo&quot;) ) %&gt;% data.frame() Tabla 4.7: Estimaciones por departamento y sexo dam sexo H H_sd A A_sd IPM IPM_sd 05 1 0.2714 0.0520 0.5772 0.0140 0.1563 0.0283 05 2 0.2595 0.0444 0.5701 0.0140 0.1477 0.0246 08 1 0.2486 0.0660 0.5514 0.0164 0.1367 0.0352 08 2 0.2394 0.0561 0.5494 0.0165 0.1313 0.0301 11 1 0.0926 0.0855 0.5274 0.0326 0.0487 0.0453 11 2 0.1024 0.0853 0.5227 0.0304 0.0525 0.0431 13 1 0.4680 0.0486 0.6202 0.0149 0.2900 0.0289 13 2 0.4595 0.0509 0.6070 0.0140 0.2787 0.0295 15 1 0.4094 0.0308 0.5887 0.0094 0.2411 0.0195 15 2 0.3992 0.0296 0.5824 0.0098 0.2325 0.0185 17 1 0.2900 0.0406 0.5761 0.0112 0.1668 0.0215 17 2 0.2641 0.0384 0.5715 0.0104 0.1508 0.0210 18 1 0.5520 0.0630 0.6153 0.0120 0.3393 0.0358 18 2 0.5549 0.0608 0.6064 0.0131 0.3361 0.0337 19 1 0.5874 0.0316 0.6214 0.0087 0.3650 0.0195 19 2 0.5710 0.0322 0.6189 0.0078 0.3534 0.0203 20 1 0.4671 0.0544 0.6033 0.0132 0.2816 0.0318 20 2 0.4610 0.0565 0.5924 0.0135 0.2729 0.0327 23 1 0.6003 0.0362 0.6508 0.0101 0.3905 0.0221 23 2 0.5918 0.0382 0.6418 0.0113 0.3796 0.0221 25 1 0.3208 0.0450 0.5798 0.0121 0.1860 0.0263 25 2 0.3064 0.0409 0.5731 0.0118 0.1756 0.0237 27 1 0.7750 0.0435 0.6312 0.0104 0.4891 0.0272 27 2 0.7658 0.0468 0.6316 0.0116 0.4837 0.0312 41 1 0.4564 0.0431 0.5876 0.0140 0.2682 0.0265 41 2 0.4281 0.0420 0.5818 0.0141 0.2490 0.0243 44 1 0.7357 0.0310 0.6964 0.0118 0.5123 0.0232 44 2 0.7423 0.0327 0.6966 0.0111 0.5169 0.0208 47 1 0.5107 0.0553 0.6170 0.0143 0.3150 0.0336 47 2 0.5056 0.0611 0.6037 0.0165 0.3048 0.0337 50 1 0.3772 0.0552 0.5966 0.0149 0.2246 0.0300 50 2 0.3440 0.0589 0.5878 0.0155 0.2018 0.0322 52 1 0.5936 0.0338 0.6198 0.0093 0.3679 0.0208 52 2 0.6075 0.0438 0.6146 0.0087 0.3733 0.0265 54 1 0.4367 0.0736 0.5908 0.0145 0.2576 0.0412 54 2 0.4226 0.0584 0.5833 0.0136 0.2463 0.0333 63 1 0.2365 0.0569 0.5507 0.0133 0.1300 0.0304 63 2 0.2248 0.0572 0.5451 0.0134 0.1222 0.0299 66 1 0.2671 0.0465 0.5704 0.0153 0.1519 0.0242 66 2 0.2682 0.0559 0.5623 0.0153 0.1503 0.0290 68 1 0.3359 0.0357 0.5953 0.0137 0.1998 0.0198 68 2 0.3099 0.0342 0.5851 0.0107 0.1812 0.0192 70 1 0.5834 0.0447 0.6319 0.0130 0.3685 0.0284 70 2 0.5580 0.0424 0.6203 0.0133 0.3461 0.0263 73 1 0.4064 0.0440 0.5945 0.0147 0.2415 0.0253 73 2 0.3847 0.0452 0.5845 0.0138 0.2247 0.0258 76 1 0.2069 0.0370 0.5580 0.0117 0.1153 0.0202 76 2 0.2037 0.0384 0.5535 0.0126 0.1126 0.0206 81 1 0.5858 0.1069 0.6045 0.0299 0.3558 0.0747 81 2 0.5799 0.1087 0.5937 0.0266 0.3459 0.0746 85 1 0.5427 0.1101 0.5954 0.0288 0.3246 0.0739 85 2 0.5391 0.1173 0.5899 0.0278 0.3194 0.0767 86 1 0.6096 0.0998 0.6078 0.0270 0.3723 0.0725 86 2 0.6149 0.0952 0.6040 0.0291 0.3733 0.0714 88 1 0.4604 0.1316 0.5828 0.0278 0.2698 0.0825 88 2 0.4769 0.1270 0.5771 0.0289 0.2763 0.0780 91 1 0.5954 0.1230 0.6157 0.0292 0.3684 0.0857 91 2 0.6283 0.1137 0.6166 0.0318 0.3891 0.0812 94 1 0.6736 0.1034 0.6250 0.0338 0.4226 0.0769 94 2 0.7200 0.0993 0.6365 0.0358 0.4601 0.0802 95 1 0.5970 0.1177 0.6069 0.0275 0.3633 0.0784 95 2 0.5952 0.1179 0.6023 0.0330 0.3598 0.0792 97 1 0.6714 0.1257 0.6335 0.0365 0.4273 0.0921 97 2 0.7365 0.1001 0.6377 0.0402 0.4718 0.0829 99 1 0.6954 0.0921 0.6304 0.0368 0.4405 0.0762 99 2 0.7252 0.0869 0.6412 0.0390 0.4665 0.0725 "],["estimaciones-por-dimension-del-ipm.html", "4.7 Estimaciones por dimension del IPM", " 4.7 Estimaciones por dimension del IPM Dado que el Índice de Pobreza Multidimensional (IPM) está compuesto por diversas dimensiones, resulta fundamental analizar cada una de estas dimensiones de manera individual. Esto permite comprender la naturaleza compleja y multifacética de la pobreza, lo cual a su vez posibilita diseñar estrategias de reducción efectivas. Esta aproximación garantiza una toma de decisiones fundamentada, la distribución eficiente de recursos y un impacto más profundo en la mejora de las condiciones de vida de las personas vulnerables. En este contexto, los “hard estimates” previamente obtenidos para cada dimensión resultan esenciales para obtener las estimaciones correspondientes a cada una de ellas. El proceso de cálculo se basa en una media ponderada y se aplica a la dimensión de Hacinamiento, siguiendo una lógica similar para las demás dimensiones del IPM. n_filtered &lt;- censo_ipm$n epred_mat_filtered &lt;- epred_mat_hacinamiento_dummy mrp_estimates &lt;- epred_mat_filtered %*% n_filtered / sum(n_filtered) datos &lt;- data.frame( estimate = mean(mrp_estimates), estimate_se = sd(mrp_estimates) ) Tabla 4.8: Estimaciones nacional para Hacinamiento estimate estimate_se 0.213 0.0187 Con el objetivo de agilizar el proceso de calculo se define crea la función agregado_dim_ipm que hace los cálculos. La forma de uso es la siguiente. source(&quot;Modelo_bayes_HxA/0funciones/agregado_dim_ipm.r&quot;) datos_dam_haci &lt;- agregado_dim_ipm(poststrat = censo_ipm, epredmat = epred_mat_hacinamiento_dummy, byMap = &quot;dam&quot;) Tabla 4.9: Estimaciones por departamento para Hacinamiento dam estimate estimate_se 05 0.1459 0.0399 08 0.3660 0.0671 11 0.1204 0.0792 13 0.3635 0.0513 15 0.1550 0.0226 17 0.1199 0.0300 18 0.2599 0.0431 19 0.2437 0.0239 20 0.4038 0.0456 23 0.4052 0.0297 25 0.2021 0.0324 27 0.2264 0.0304 41 0.1828 0.0353 44 0.5007 0.0293 47 0.4352 0.0447 50 0.1698 0.0456 52 0.2445 0.0260 54 0.2869 0.0475 63 0.1112 0.0380 66 0.1094 0.0307 68 0.1795 0.0290 70 0.3869 0.0378 73 0.1977 0.0399 76 0.1183 0.0296 81 0.2794 0.1271 85 0.2657 0.1240 86 0.2891 0.1251 88 0.2337 0.1115 91 0.3269 0.1379 94 0.3595 0.1331 95 0.2962 0.1332 97 0.3603 0.1465 99 0.3506 0.1457 El resultado por municipio y para todas las dimensiones se muestra en la siguiente tabla Tabla 4.10: Estimacion puntual por municipio y dimension dam2 Agua Educacion Empleo Energia Hacinamienot Internet Material Saneamiento 05001 0.0111 0.6114 0.4378 0.2092 0.1492 0.3530 0.0018 0.0002 05002 0.0878 0.7534 0.6730 0.8434 0.1874 0.8642 0.0220 0.0006 05004 0.1545 0.6651 0.6529 0.6855 0.1672 0.7496 0.0348 0.0088 05021 0.1118 0.6935 0.6364 0.5681 0.1645 0.6947 0.0257 0.0084 05030 0.1277 0.6637 0.6509 0.6012 0.1591 0.6944 0.0252 0.0090 05031 0.0044 0.7257 0.7231 0.6380 0.1800 0.8681 0.0208 0.0001 05034 0.2021 0.7032 0.7013 0.7456 0.1279 0.7300 0.0051 0.0148 05036 0.1418 0.7144 0.6728 0.6601 0.1688 0.7502 0.0350 0.0110 05038 0.1785 0.7516 0.7048 0.7464 0.1723 0.7921 0.0395 0.0125 05040 0.1297 0.7391 0.6809 0.6273 0.1910 0.7343 0.0316 0.0084 Tabla 4.11: Error de estimacion por municipio y dimension dam2 Agua_se Educacion_se Empleo_se Energia_se Hacinamienot_se Internet_se Material_se Saneamiento_se 05001 0.0214 0.0855 0.1035 0.0858 0.0906 0.1019 0.0050 0.0015 05002 0.0651 0.0666 0.0802 0.0579 0.0851 0.0570 0.0333 0.0044 05004 0.1985 0.0731 0.1011 0.2171 0.0880 0.1489 0.0564 0.0296 05021 0.1391 0.0774 0.1169 0.2357 0.0887 0.1695 0.0403 0.0305 05030 0.1605 0.0686 0.1013 0.2299 0.0761 0.1632 0.0403 0.0318 05031 0.0113 0.0658 0.0848 0.0817 0.0712 0.0540 0.0279 0.0009 05034 0.0704 0.0657 0.0782 0.0655 0.0629 0.0688 0.0134 0.0258 05036 0.1821 0.0632 0.1005 0.2244 0.0826 0.1467 0.0459 0.0383 05038 0.2192 0.0764 0.1244 0.2052 0.0870 0.1464 0.0598 0.0484 05040 0.1553 0.0732 0.0994 0.2243 0.0812 0.1558 0.0408 0.0278 "],["mapa-del-ipm-por-municipio-de-colombia.html", "Capítulo 5 Mapa del IPM por municipio de Colombia", " Capítulo 5 Mapa del IPM por municipio de Colombia Dado que los municipios son otro nivel de desagregción, es posible realizar un mapa municipal para \\(H\\), \\(A\\) e \\(IPM\\). Para realizar el proceso, previamente se guardaron las estimaciones necesarias en un archivo .rds el cual usaremos a continuación: library(sf) library(tmap) estimado_ipm &lt;- readRDS(file = &quot;Modelo_bayes_HxA/COL/Data/estimado_ipm.rds&quot;) ShapeSAE &lt;- read_sf(&quot;Modelo_bayes_HxA/COL/Shape/COL_dam2.shp&quot;) brks_H &lt;- round(quantile(estimado_ipm$H,probs = c(0,0.2,0.4,0.6,0.8,1)),2) brks_ipm &lt;- round(quantile(estimado_ipm$IPM,probs = c(0,0.2,0.4,0.6,0.8,1)),2) brks_A &lt;- round(quantile(estimado_ipm$A,probs = c(0,0.2,0.4,0.6,0.8,1)),2) maps3 &lt;- tm_shape(ShapeSAE %&gt;% left_join(estimado_ipm, by = &quot;dam2&quot;)) Para crear los mapas se usa la siguiente sintaxis thema_map &lt;- tm_layout(legend.only = FALSE, legend.height = -0.5, legend.width = -0.4, asp = 1.5, legend.text.size = 5, legend.title.size = 4) Mapa_H &lt;- maps3 + tm_polygons( &quot;H&quot;, breaks = brks_H, title = &quot;H&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map Mapa_A &lt;- maps3 + tm_polygons( &quot;A&quot;, breaks = brks_A, title = &quot;A&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map Mapa_ipm &lt;- maps3 + tm_polygons( &quot;IPM&quot;, breaks = brks_ipm, title = &quot;IPM&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map Mapas &lt;- tmap_arrange(Mapa_H, Mapa_A, Mapa_ipm) tmap_save( Mapas, &quot;Modelo_bayes_HxA/COL/Output/COL_IPM.jpeg&quot;, width = 6920, height = 4080, asp = 0 ) "],["mapa-municipal-por-dimensión-del-ipm.html", "5.1 Mapa municipal por dimensión del IPM", " 5.1 Mapa municipal por dimensión del IPM temp_estimate_mpio &lt;- readRDS(&quot;Modelo_bayes_HxA/COL/data/temp_estimate_mpio.rds&quot;) brks_dim &lt;- c(0,0.3 ,0.5, .7, 0.9, 1) maps2 &lt;- tm_shape(ShapeSAE %&gt;% inner_join(temp_estimate_mpio, by = &quot;dam2&quot;)) Mapa_ing2 &lt;- maps2 + tm_polygons( &quot;estimate&quot;, breaks = brks_dim, title = &quot;&quot;, palette = &quot;YlOrRd&quot;, colorNA = &quot;white&quot; ) + thema_map + tm_facets(by = &quot;Indicador&quot;, ncol = 4) tmap_save( Mapa_ing2, &quot;Modelo_bayes_HxA/COL/Output/COL_dims_ipm.jpeg&quot;, width = 6920, height = 4080, asp = 0 ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
